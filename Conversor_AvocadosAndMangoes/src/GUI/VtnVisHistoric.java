/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Conexion.Conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johnm
 */
public class VtnVisHistoric extends javax.swing.JFrame {
    
    private VtnOrders ordenes;
    
    public VtnVisHistoric() {
        initComponents();
        this.setLocation(100, 30);
        this.setResizable(false);
        
        //Carga de las ordenes de base de datos a la tabla de visualizacion
        CargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaOrdenes = new javax.swing.JTable();
        btnRegresar = new javax.swing.JToggleButton();
        cmpBusqueda = new javax.swing.JTextField();
        btnBuscarOrden = new javax.swing.JButton();
        btnFiltros = new javax.swing.JButton();
        comboBusqueda = new javax.swing.JComboBox<>();
        cmpDateFrom = new javax.swing.JTextField();
        dateTo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        deleteDateFrom1 = new javax.swing.JTextField();
        deleteDateTo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnDeteleRange = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HISTORIC ORDERS");

        tablaOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Phone", "Client", "Address", "Address2", "Item", "Unit Price", "Quantity", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaOrdenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaOrdenes);

        btnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flecha.png"))); // NOI18N
        btnRegresar.setBorder(null);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        cmpBusqueda.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpBusquedaKeyPressed(evt);
            }
        });

        btnBuscarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lupa.png"))); // NOI18N
        btnBuscarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarOrdenActionPerformed(evt);
            }
        });
        btnBuscarOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarOrdenKeyPressed(evt);
            }
        });

        btnFiltros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/filtro_icon.png"))); // NOI18N
        btnFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrosActionPerformed(evt);
            }
        });

        comboBusqueda.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        comboBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phone number", "Client name", "City", "Address", "Address2" }));

        cmpDateFrom.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        cmpDateFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmpDateFromKeyPressed(evt);
            }
        });

        dateTo.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        dateTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateToKeyPressed(evt);
            }
        });

        jLabel2.setText("From");

        jLabel3.setText("To");

        jLabel4.setText("From");

        deleteDateFrom1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        deleteDateFrom1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteDateFrom1KeyPressed(evt);
            }
        });

        deleteDateTo.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        deleteDateTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteDateToKeyPressed(evt);
            }
        });

        jLabel5.setText("To");

        btnDeteleRange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/filtro_icon.png"))); // NOI18N
        btnDeteleRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeteleRangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmpDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteDateFrom1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeteleRange, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1178, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBuscarOrden)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmpBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmpDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addComponent(btnFiltros)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteDateFrom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(deleteDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(btnDeteleRange))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(504, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        ordenes = new VtnOrders();
        irA(ordenes);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrosActionPerformed
        // Filter data set with date range
        //FilterHistoricByRange();
    }//GEN-LAST:event_btnFiltrosActionPerformed

    private void btnBuscarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarOrdenActionPerformed
        CargarDatosTabla();
    }//GEN-LAST:event_btnBuscarOrdenActionPerformed

    private void btnBuscarOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarOrdenKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarOrdenKeyPressed

    private void cmpBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpBusquedaKeyPressed
        
        if(evt.getKeyCode() == evt.VK_ENTER) {
            CargarDatosTabla();
        }
    }//GEN-LAST:event_cmpBusquedaKeyPressed

    private void tablaOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaOrdenesMouseClicked
    }//GEN-LAST:event_tablaOrdenesMouseClicked

    private void cmpDateFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmpDateFromKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmpDateFromKeyPressed

    private void dateToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateToKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateToKeyPressed

    private void deleteDateFrom1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteDateFrom1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteDateFrom1KeyPressed

    private void deleteDateToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteDateToKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteDateToKeyPressed

    private void btnDeteleRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeteleRangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeteleRangeActionPerformed
    
    public void irA(JFrame ventana){
        this.dispose();
        ventana.setVisible(true);
    }
    
    public void CargarDatosTabla(){
        
        DefaultTableModel tablaModelo = new DefaultTableModel();
        Statement prepStat = null;
        ResultSet resSet = null;
        ResultSetMetaData rsMd = null;
        Conexion cnx = new Conexion();
        Connection con;
        String sql = "";
        
        //Variables utilizadas para la busqueda 
        String itemSeleccionado = (String)comboBusqueda.getSelectedItem();
        String cmpBuscar = cmpBusqueda.getText();
        String where = "";
            
        //Si la variable del campo no esta vacia
        if ( !"".equals(cmpBuscar) )
        {
            //Segun el campo seleccionado en el combo hace ciertas busquedas:
            //Cuando es telefono lo busca con exactitud ya que es llave primaria
            if ( itemSeleccionado.equalsIgnoreCase("phone number") )
            {
                where = "WHERE shippingPhone = '"+cmpBuscar+"'";
            }//Si es cliente busca el patron indicado al inicio de la cadena (patron%)
            else if ( itemSeleccionado.equalsIgnoreCase("client name") )
            {
                where = "WHERE shippingName LIKE '"+cmpBuscar+"%'";
            }
            else if ( itemSeleccionado.equalsIgnoreCase("address") )
            {
                where = "WHERE address LIKE '"+cmpBuscar+"%'";
            }
            else if ( itemSeleccionado.equalsIgnoreCase("address2") )
            {
                where = "WHERE address2 LIKE '"+cmpBuscar+"%'";
            }
            else if ( itemSeleccionado.equalsIgnoreCase("city") )
            {
                where = "WHERE city LIKE '"+cmpBuscar+"%'";
            }
        }
        
        try {
            
            int cantCol;
            
            prepStat = (Statement) cnx.con.createStatement(); 
            
            tablaOrdenes.setModel(tablaModelo);
            
            sql = "SELECT id, shippingPhone, shippingName, address, address2, city, itemName, value, cant, total, date FROM horders "+where;
            resSet = prepStat.executeQuery(sql);
            
            rsMd = resSet.getMetaData();
            cantCol = rsMd.getColumnCount();
            
            //Asigna rotulos a la tabla
            tablaModelo.addColumn("Id");
            tablaModelo.addColumn("Phone");
            tablaModelo.addColumn("Client name");
            tablaModelo.addColumn("Address");
            tablaModelo.addColumn("Address2");
            tablaModelo.addColumn("City");
            tablaModelo.addColumn("Item");
            tablaModelo.addColumn("Unit price");
            tablaModelo.addColumn("Quantity");
            tablaModelo.addColumn("Total");
            tablaModelo.addColumn("Date");
            
            //Pone ancho de las columnas
            int [] anchoCols = {20, 60, 150, 80, 100, 100, 80, 40, 30, 40, 60};
            
            for ( int j = 0; j < cantCol; j++ )
            {
                tablaOrdenes.getColumnModel().getColumn(j).setPreferredWidth(anchoCols[j]);
            }
            
            while ( resSet.next() )
            {
                //Crea array de objetos para obtener cada orden de la BD
                Object[] filas = new Object[cantCol];
                
                for ( int i = 0; i < cantCol; i++ )
                {
                    //Obtiene cada objeto y lo agrega al array "filas"
                    filas[i] = resSet.getObject(i + 1);
                }
                
                tablaModelo.addRow(filas);
            }
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarOrden;
    private javax.swing.JButton btnDeteleRange;
    private javax.swing.JButton btnFiltros;
    private javax.swing.JToggleButton btnRegresar;
    private javax.swing.JTextField cmpBusqueda;
    private javax.swing.JTextField cmpDateFrom;
    private javax.swing.JComboBox<String> comboBusqueda;
    private javax.swing.JTextField dateTo;
    private javax.swing.JTextField deleteDateFrom1;
    private javax.swing.JTextField deleteDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablaOrdenes;
    // End of variables declaration//GEN-END:variables
}
